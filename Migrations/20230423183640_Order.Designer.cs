// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvaPub.Repository;

#nullable disable

namespace ProvaPub.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20230423183640_Order")]
    partial class Order
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProvaPub.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Della McGlynn"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Stewart Upton"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Krystal Auer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Garrett Murphy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Javier Barrows"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Francisco Pouros"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Wilbert Reilly"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jana Casper"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Woodrow Schaden"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Russell Bogan"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Santiago Walsh"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Edmund Reinger"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Tanya Gusikowski"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Leslie Swaniawski"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Marguerite Blick"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Patti Dicki"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Patty Keeling"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Leslie Mertz"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Robin Hegmann"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Ruby Zieme"
                        });
                });

            modelBuilder.Entity("ProvaPub.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("MetodyPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("ProvaPub.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sleek Cotton Gloves"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sleek Frozen Chair"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sleek Steel Shirt"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Incredible Steel Cheese"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ergonomic Plastic Sausages"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Rustic Plastic Bacon"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tasty Wooden Pizza"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Rustic Granite Salad"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Small Concrete Cheese"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Intelligent Wooden Cheese"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Rustic Frozen Ball"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fantastic Rubber Tuna"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Intelligent Plastic Keyboard"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Gorgeous Steel Gloves"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Awesome Granite Ball"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Practical Rubber Car"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Unbranded Rubber Chicken"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Tasty Rubber Soap"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Sleek Cotton Pants"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Sleek Granite Shoes"
                        });
                });

            modelBuilder.Entity("ProvaPub.Models.Order", b =>
                {
                    b.HasOne("ProvaPub.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProvaPub.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
